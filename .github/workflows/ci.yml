name: Continuous integration
on:
  push:
    branches:
      - develop
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7.0.5-alpine
        ports:
          - 6379/tcp
    steps:
      - name: check out code
        uses: actions/checkout@v3
      - name: set up golang
        uses: actions/setup-go@v4
        with:
          go-version: '~1.20.6'
      - name: unit test
        run: go test -covermode=atomic -coverprofile=profile.cov -v ./...
        env:
          REDIS_MASTER_SERVICE_HOST: localhost
          REDIS_MASTER_SERVICE_PORT: ${{ job.services.redis.ports[6379] }}
          GOPROXY: https://proxy.golang.org
      - name: upload coverage to codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./profile.cov
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: check out code
        uses: actions/checkout@v3
      - name: set up docker buildx
        uses: docker/setup-buildx-action@v2
      - name: log into dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKER_PASS }}
      - name: cache docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: setup docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with: 
          images: dictybase/modware-auth
          tags: |
            type=ref,event=branch
            type=sha,format=short,prefix={{branch}}-
      - name: docker build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          file: build/package/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
